<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.afc</groupId>
	<artifactId>afc-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<prerequisites>
		<maven>2.2.0</maven>
	</prerequisites>
	<properties>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<deployFileUrl>${project.distributionManagement.snapshotRepository.url}</deployFileUrl>

		<artifact.springfox.version>2.5.0</artifact.springfox.version>
		<artifact.swagger.version>1.5.12</artifact.swagger.version>
		<artifact.swagger3.version>2.0.0</artifact.swagger3.version>

		<artifact.clover.version>4.3.1</artifact.clover.version>
		<artifact.lombok.version>1.18.4</artifact.lombok.version>

		<artifact.okhttp.version>2.7.5</artifact.okhttp.version>
		<artifact.gson.version>2.8.1</artifact.gson.version>
		<artifact.gson-fire.version>1.8.3</artifact.gson-fire.version>
		<artifact.jodatime.version>2.9.3</artifact.jodatime.version>
		<artifact.jmock.version>2.8.3</artifact.jmock.version>
		<artifact.spring-boot.version>2.0.0.RELEASE</artifact.spring-boot.version>
		<artifact.spring-data-releasetrain.version>Fowler-SR2</artifact.spring-data-releasetrain.version>
		<artifact.spring-cloud-dependencies.version>Finchley.M8</artifact.spring-cloud-dependencies.version>
		<artifact.rabbitmq.version>3.7.5</artifact.rabbitmq.version>
		<artifact.erlang.version>9.3</artifact.erlang.version>
		<artifact.hazelcast.version>3.11.1</artifact.hazelcast.version>
		<artifact.jjwt.version>0.9.0</artifact.jjwt.version>
		

		<swagger.serializable-model>false</swagger.serializable-model>
		<swagger.dateLibrary>java8</swagger.dateLibrary>

		<docker.registry>jenkins.afc.local:8182</docker.registry>
		<docker.registry.release>jenkins.afc.local:8181</docker.registry.release>

		<clover.exclude.1>placeholder</clover.exclude.1>
		<clover.exclude.2>placeholder</clover.exclude.2>
		<clover.exclude.3>placeholder</clover.exclude.3>
		<clover.exclude.4>placeholder</clover.exclude.4>
		<clover.exclude.5>placeholder</clover.exclude.5>
		<clover.exclude.6>placeholder</clover.exclude.6>
		<clover.exclude.7>placeholder</clover.exclude.7>
		<clover.exclude.8>placeholder</clover.exclude.8>
		<clover.exclude.9>placeholder</clover.exclude.9>
	</properties>
	<scm>
		<url>https://github.com/alfredyctan/afc</url>
		<connection>scm:git:https://github.com/alfredyctan/afc.git</connection>
		<developerConnection>scm:git:https://github.com/alfredyctan/afc.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<distributionManagement>
		<repository>
			<id>release</id>
			<url>http://localhost:8081/repository/release</url>
			<uniqueVersion>true</uniqueVersion>
		</repository>
		<snapshotRepository>
			<id>snapshot</id>
			<url>http://localhost:8081/repository/snapshot</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
	</distributionManagement>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${artifact.hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-client</artifactId>
				<version>${artifact.hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${artifact.jjwt.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${artifact.lombok.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${artifact.swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${artifact.springfox.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${artifact.springfox.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp</groupId>
				<artifactId>okhttp</artifactId>
				<version>${artifact.okhttp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp</groupId>
				<artifactId>logging-interceptor</artifactId>
				<version>${artifact.okhttp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${artifact.gson.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${artifact.jodatime.version}</version>
			</dependency>
			<!-- test dependencies -->
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock</artifactId>
				<version>${artifact.jmock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jmock</groupId>
				<artifactId>jmock-junit4</artifactId>
				<version>${artifact.jmock.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${artifact.spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${artifact.spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.4</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.13-java7</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/javascript</directory>
				<excludes>
					<exclude>**/*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/python</directory>
				<excludes>
					<exclude>**/*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources-excluded</directory>
				<targetPath>${project.build.directory}/resources-excluded</targetPath>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/node</directory>
				<excludes>
					<exclude>**</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
			</resource>
			<resource>
				<directory>src/main/config</directory>
				<targetPath>${project.build.directory}/config</targetPath>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/config</directory>
				<targetPath>${project.build.testOutputDirectory}</targetPath>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/scripts</directory>
				<targetPath>${project.build.directory}/scripts</targetPath>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/filters</directory>
				<excludes>
					<exclude>**</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/assembly</directory>
				<excludes>
					<exclude>**</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/test/filters</directory>
			</testResource>
			<testResource>
				<directory>src/test/javascript</directory>
				<excludes>
					<exclude>**/*</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/python</directory>
				<excludes>
					<exclude>**/*</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<updateReleaseInfo>true</updateReleaseInfo>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<tagNameFormat>@{project.artifactId}-@{project.version}</tagNameFormat>
					<preparationGoals>clean install</preparationGoals>
					<pushChanges>true</pushChanges>
					<updateDependencies>false</updateDependencies>
					<releaseProfiles>release-mode</releaseProfiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-sources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-test-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- attach test jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<skipIfEmpty>true</skipIfEmpty>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.7.0</version>
					<executions>
						<execution>
							<id>querydsl-apt-jpa</id>
							<phase>none</phase>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<generatedSourcesDirectory>${project.build.directory}/generated-sources</generatedSourcesDirectory>
								<proc>only</proc>
								<annotationProcessors>
									<annotationProcessor>com.querydsl.apt.jpa.JPAAnnotationProcessor</annotationProcessor>
								</annotationProcessors>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>1.6</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.2.4</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.5.1</version>
					<executions>
						<execution>
							<id>latest-release</id>
							<phase>none</phase>
							<goals>
								<goal>use-latest-versions</goal>
							</goals>
							<configuration>
								<includes>
									<include>org.afc:*</include>
									<include>org.afc.*:*</include>
								</includes>
								<generateBackupPoms>false</generateBackupPoms>
								<allowMajorUpdates>true</allowMajorUpdates>
								<allowMinorUpdates>true</allowMinorUpdates>
								<allowIncrementalUpdates>true</allowIncrementalUpdates>
								<allowSnapshots>false</allowSnapshots>
								<excludeReactor>false</excludeReactor>
								<processParent>true</processParent>
								<processDependencies>true</processDependencies>
								<processDependencyManagement>true</processDependencyManagement>
							</configuration>
						</execution>
						<execution>
							<id>latest-snapshot</id>
							<phase>none</phase>
							<goals>
								<goal>use-latest-versions</goal>
							</goals>
							<configuration>
								<includes>
									<include>${artifact}</include>
								</includes>
								<generateBackupPoms>false</generateBackupPoms>
								<allowMajorUpdates>true</allowMajorUpdates>
								<allowMinorUpdates>true</allowMinorUpdates>
								<allowIncrementalUpdates>true</allowIncrementalUpdates>
								<allowSnapshots>true</allowSnapshots>
								<excludeReactor>false</excludeReactor>
								<processParent>true</processParent>
								<processDependencies>true</processDependencies>
								<processDependencyManagement>true</processDependencyManagement>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.9</version>
					<executions>
						<execution>
							<id>copy-dependencies</id>
							<phase>none</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/lib</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>unpack-model</id>
							<phase>none</phase>
							<goals>
								<goal>unpack-dependencies</goal>
							</goals>
							<configuration>
								<includeGroupIds>org.afc</includeGroupIds>
								<includeArtifactIds>afc-swagger-model</includeArtifactIds>
								<includeClassifiers>resources</includeClassifiers>
								<includeTypes>tar.gz</includeTypes>
								<outputDirectory>${project.build.directory}</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>unpack-specification</id>
							<phase>validate</phase>
							<goals>
								<goal>unpack-dependencies</goal>
							</goals>
							<configuration>
								<includeTypes>jar</includeTypes>
								<includeClassifiers>specification</includeClassifiers>
								<outputDirectory>${project.build.directory}</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>copy-scripts</id>
							<phase>none</phase>
							<goals>
								<goal>unpack-dependencies</goal>
							</goals>
							<configuration>
								<includeGroupIds>org.afc</includeGroupIds>
								<includeArtifactIds>afc-scripts</includeArtifactIds>
								<includeClassifiers>pack</includeClassifiers>
								<includeTypes>tar.gz</includeTypes>
								<outputDirectory>${project.build.directory}/scripts.unfiltered</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${artifact.spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
								<goal>build-info</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>net.wouterdanes</groupId>
					<artifactId>mustache-maven-plugin</artifactId>
					<version>1.1</version>
					<executions>
						<execution>
							<id>swagger-specification-combine</id>
							<phase>none</phase>
							<goals>
								<goal>mustache</goal>
							</goals>
							<configuration>
								<encoding>UTF-8</encoding>
								<context>file:${project.basedir}/target/swagger/context.yml</context>
								<templates>
									<template>
										<templateFile>${project.basedir}/target/resources-excluded/swagger/specification.yms</templateFile>
										<outputPath>${project.basedir}/target/resources-excluded/swagger/specification.yml</outputPath>
									</template>
								</templates>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.swagger</groupId>
					<artifactId>swagger-codegen-maven-plugin</artifactId>
					<version>2.2.3</version>
					<executions>
						<execution>
							<id>generate-java</id>
							<phase>none</phase>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<ignoreFileOverride>${project.basedir}/src/main/resources-excluded/swagger/codegen-ignore</ignoreFileOverride>
								<inputSpec>${project.build.directory}/resources-excluded/swagger/${swagger.specification.prefix}specification.yml</inputSpec>
								<language>${swagger.language}</language>
								<configurationFile>${project.basedir}/src/main/resources-excluded/swagger/${swagger.config}</configurationFile>
								<templateDirectory>${project.build.directory}/mustache</templateDirectory>
								<output>${project.build.directory}</output>
								<configOptions>
									<library>${swagger.library}</library>
									<serializableModel>${swagger.serializable-model}</serializableModel>
									<sourceFolder>generated-sources</sourceFolder>
									<testSourceFolder>generated-test-sources</testSourceFolder>
									<dateLibrary>${swagger.dateLibrary}</dateLibrary>
								</configOptions>
							</configuration>
						</execution>
						<execution>
							<id>generate-javascript</id>
							<phase>none</phase>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<ignoreFileOverride>${project.build.directory}/resources-excluded/swagger/codegen-ignore</ignoreFileOverride>
								<inputSpec>${project.build.directory}/resources-excluded/swagger/${swagger.specification.prefix}specification.yml</inputSpec>
								<language>javascript</language>
								<configurationFile>${project.basedir}/src/main/resources-excluded/swagger/${swagger.config}</configurationFile>
								<output>${project.build.directory}/swagger-js</output>
								<configOptions>
									<sourceFolder>generated-sources</sourceFolder>
									<testSourceFolder>generated-test-sources</testSourceFolder>
									<apiPackage>${project.artifactId}</apiPackage>
									<modelPackage>${project.artifactId}</modelPackage>
								</configOptions>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.swagger.codegen.v3</groupId>
					<artifactId>swagger-codegen-maven-plugin</artifactId>
					<version>3.0.3</version>
					<executions>
						<execution>
							<id>generate-java</id>
							<phase>none</phase>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<ignoreFileOverride>${project.basedir}/src/main/resources-excluded/swagger3/codegen-ignore</ignoreFileOverride>
								<inputSpec>${project.build.directory}/resources-excluded/swagger3/specification.json</inputSpec>
								<language>${swagger.language}</language>
								<configurationFile>${project.basedir}/src/main/resources-excluded/swagger3/${swagger.config}</configurationFile>
								<output>${project.build.directory}</output>
								<configOptions>
									<library>${swagger.library}</library>
									<serializableModel>${swagger.serializable-model}</serializableModel>
									<sourceFolder>generated-sources</sourceFolder>
									<testSourceFolder>generated-test-sources</testSourceFolder>
									<dateLibrary>${swagger.dateLibrary}</dateLibrary>
								</configOptions>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
					<configuration>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>docx</nonFilteredFileExtension>
							<nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
							<nonFilteredFileExtension>pptx</nonFilteredFileExtension>
							<nonFilteredFileExtension>doc</nonFilteredFileExtension>
							<nonFilteredFileExtension>xls</nonFilteredFileExtension>
							<nonFilteredFileExtension>ppt</nonFilteredFileExtension>
							<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
							<nonFilteredFileExtension>ico</nonFilteredFileExtension>
							<nonFilteredFileExtension>jpg</nonFilteredFileExtension>
							<nonFilteredFileExtension>gif</nonFilteredFileExtension>
							<nonFilteredFileExtension>bmp</nonFilteredFileExtension>
							<nonFilteredFileExtension>png</nonFilteredFileExtension>
							<nonFilteredFileExtension>cer</nonFilteredFileExtension>
							<nonFilteredFileExtension>der</nonFilteredFileExtension>
							<nonFilteredFileExtension>pkcs12</nonFilteredFileExtension>
							<nonFilteredFileExtension>keystore</nonFilteredFileExtension>
							<nonFilteredFileExtension>p12</nonFilteredFileExtension>
							<nonFilteredFileExtension>jks</nonFilteredFileExtension>
							<nonFilteredFileExtension>tar</nonFilteredFileExtension>
							<nonFilteredFileExtension>tar.gz</nonFilteredFileExtension>
							<nonFilteredFileExtension>zip</nonFilteredFileExtension>
							<nonFilteredFileExtension>so</nonFilteredFileExtension>
							<nonFilteredFileExtension>dll</nonFilteredFileExtension>
							<nonFilteredFileExtension>exe</nonFilteredFileExtension>
							<nonFilteredFileExtension>so</nonFilteredFileExtension>
							<nonFilteredFileExtension>msi</nonFilteredFileExtension>
							<nonFilteredFileExtension>eot</nonFilteredFileExtension>
							<nonFilteredFileExtension>otf</nonFilteredFileExtension>
							<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
							<nonFilteredFileExtension>svg</nonFilteredFileExtension>
							<nonFilteredFileExtension>woff</nonFilteredFileExtension>
							<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
					<executions>
						<execution>
							<!-- it is common to swagger-api and swagger-service -->
							<id>filter-specification</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>src/main/resources-excluded/swagger</directory>
										<includes>
											<include>specification.*</include>
										</includes>
										<targetPath>resources-excluded/swagger/</targetPath>
										<filtering>true</filtering>
									</resource>
								</resources>
								<outputDirectory>${project.build.directory}</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<!-- it is common to swagger-api and swagger-service -->
							<id>filter-specification-swagger3</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>src/main/resources-excluded/swagger3</directory>
										<includes>
											<include>**/*.json</include>
										</includes>
										<targetPath>resources-excluded/swagger3/</targetPath>
										<filtering>true</filtering>
									</resource>
									<resource>
										<directory>${project.build.directory}/swagger3</directory>
										<includes>
											<include>**/*.json</include>
										</includes>
										<targetPath>resources-excluded/swagger3/</targetPath>
										<filtering>true</filtering>
									</resource>
									<resource>
										<directory>${project.build.directory}/schema/json</directory>
										<includes>
											<include>**/*.json</include>
										</includes>
										<targetPath>resources-excluded/swagger3/</targetPath>
										<filtering>true</filtering>
									</resource>
									<resource>
										<directory>${project.build.directory}/resources-excluded/swagger3</directory>
										<includes>
											<include>**/*.json</include>
										</includes>
										<targetPath>classes/public/schema</targetPath>
										<filtering>true</filtering>
									</resource>
								</resources>
								<outputDirectory>${project.build.directory}</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>copy-swagger-readme</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>target/docs</directory>
										<targetPath>docs</targetPath>
									</resource>
									<resource>
										<directory>target</directory>
										<includes>
											<include>README.md</include>
										</includes>
									</resource>
								</resources>
								<outputDirectory>.</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>copy-swagger-js</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>target/swagger-js/generated-sources</directory>
										<targetPath>static/js</targetPath>
									</resource>
								</resources>
								<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>filter-scripts</id>
							<phase>none</phase>
							<goals>
								<goal>resources</goal>
							</goals>
							<configuration>
								<resources>
									<resource>
										<directory>${project.build.directory}/scripts.unfiltered</directory>
										<filtering>true</filtering>
										<targetPath>scripts</targetPath>
									</resource>
								</resources>
								<outputDirectory>${project.build.directory}</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-assembly-plugin</artifactId>
										<versionRange>*</versionRange>
										<goals>
											<goal>assembly</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>io.swagger</groupId>
										<artifactId>swagger-codegen-maven-plugin</artifactId>
										<versionRange>*</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>*</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
											<goal>copy</goal>
											<goal>unpack-dependencies</goal>
											<goal>build-classpath</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1.6.0,)</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-clean-plugin</artifactId>
										<versionRange>[2.5,)</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>net.wouterdanes</groupId>
										<artifactId>mustache-maven-plugin</artifactId>
										<versionRange>[1.1,)</versionRange>
										<goals>
											<goal>mustache</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>io.swagger.codegen.v3</groupId>
										<artifactId>swagger-codegen-maven-plugin</artifactId>
										<versionRange>[3.0.0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.atlassian.maven.plugins</groupId>
										<artifactId>clover-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>setup</goal>
											<goal>clover</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.openclover</groupId>
										<artifactId>clover-maven-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>setup</goal>
											<goal>clover</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>swagger-spec-mustache</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/resources-excluded/swagger/specification.yms</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>net.wouterdanes</groupId>
						<artifactId>mustache-maven-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>swagger-specification-combine</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
		<profile>
			<id>swagger-api</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/resources-excluded/swagger/api-config.json</exists>
				</file>
			</activation>
			<properties>
				<swagger.language>java</swagger.language>
				<swagger.library>okhttp-gson</swagger.library>
				<swagger.config>api-config.json</swagger.config>
				<swagger.specification.prefix />
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.afc</groupId>
					<artifactId>afc-swagger-model</artifactId>
					<classifier>resources</classifier>
					<type>tar.gz</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-model</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-specification</id>
								<phase>validate</phase>
							</execution>
							<execution>
								<id>copy-swagger-readme</id>
								<!-- <phase>process-resources</phase> -->
								<phase>none</phase>
							</execution>
							<execution>
								<id>copy-swagger-js</id>
								<phase>process-sources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-java</id>
								<phase>generate-sources</phase>
							</execution>
							<execution>
								<id>generate-javascript</id>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-specification</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${project.build.directory}/resources-excluded/swagger/specification.yml</file>
											<classifier>specification</classifier>
											<type>yml</type>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>swagger-service</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/resources-excluded/swagger/service-config.json</exists>
				</file>
			</activation>
			<properties>
				<swagger.language>spring</swagger.language>
				<swagger.library>spring-boot</swagger.library>
				<swagger.config>service-config.json</swagger.config>
				<swagger.specification.prefix>${swagger.specification.artifactId}-</swagger.specification.prefix>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.afc</groupId>
					<artifactId>afc-swagger-model</artifactId>
					<classifier>resources</classifier>
					<type>tar.gz</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-model</id>
								<phase>validate</phase>
							</execution>
							<execution>
								<id>copy-specification</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<includeGroupIds>${swagger.specification.groupId}</includeGroupIds>
									<includeArtifactIds>${swagger.specification.artifactId}</includeArtifactIds>
									<includeTypes>yml</includeTypes>
									<includeClassifiers>specification</includeClassifiers>
									<overWrite>true</overWrite>
									<stripVersion>true</stripVersion>
									<outputDirectory>${project.build.directory}/resources-excluded/swagger</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-java</id>
								<phase>generate-sources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>swagger-exclude</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>${project.build.directory}/generated-sources</directory>
											<includes>
												<!-- edited sources -->
												<include>**/HomeController.java</include>
											</includes>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>swagger3-api</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/resources-excluded/swagger3/api-config.json</exists>
				</file>
			</activation>
			<properties>
				<swagger.language>java</swagger.language>
				<swagger.library>resttemplate</swagger.library>
				<swagger.config>api-config.json</swagger.config>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.afc</groupId>
					<artifactId>afc-swagger-model</artifactId>
					<classifier>resources</classifier>
					<type>tar.gz</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-model</id>
								<phase>validate</phase>
							</execution>
							<execution>
								<id>unpack-specification</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-specification-swagger3</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.swagger.codegen.v3</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-java</id>
								<phase>generate-sources</phase>
								<configuration>
									<templateDirectory>${project.build.directory}/handlebars/Java</templateDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>swagger3-service</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>src/main/resources-excluded/swagger3/service-config.json</exists>
				</file>
			</activation>
			<properties>
				<swagger.language>spring</swagger.language>
				<swagger.library>spring-boot</swagger.library>
				<swagger.config>service-config.json</swagger.config>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.afc</groupId>
					<artifactId>afc-swagger-model</artifactId>
					<classifier>resources</classifier>
					<type>tar.gz</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-model</id>
								<phase>validate</phase>
							</execution>
							<execution>
								<id>unpack-specification</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-specification-swagger3</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.swagger.codegen.v3</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-java</id>
								<phase>generate-sources</phase>
								<configuration>
									<templateDirectory>${project.build.directory}/mustache/JavaSpring</templateDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>swagger-exclude</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>${project.build.directory}/generated-sources</directory>
											<includes>
												<!-- edited sources -->
												<include>**/HomeController.java</include>
											</includes>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release-mode</id>
			<properties>
				<deployFileUrl>${project.distributionManagement.repository.url}</deployFileUrl>
				<docker.registry>${docker.registry.release}</docker.registry>
			</properties>
		</profile>
		<profile>
			<id>spring-boot</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<file>
					<exists>${basedir}/src/main/resources/bootstrap.yml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<!-- Apply more sensible defaults for user projects -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<executions>
								<execution>
									<goals>
										<goal>integration-test</goal>
										<goal>verify</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<configuration>
								<archive>
									<manifest>
										<mainClass>${start-class}</mainClass>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<configuration>
								<includes>
									<include>**/*Tests.java</include>
									<include>**/*Test.java</include>
								</includes>
								<excludes>
									<exclude>**/Abstract*.java</exclude>
								</excludes>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<configuration>
								<failOnMissingWebXml>false</failOnMissingWebXml>
								<archive>
									<manifest>
										<mainClass>${start-class}</mainClass>
										<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									</manifest>
								</archive>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>exec-maven-plugin</artifactId>
							<configuration>
								<mainClass>${start-class}</mainClass>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>2.6</version>
							<configuration>
								<delimiters>
									<delimiter>${resource.delimiter}</delimiter>
								</delimiters>
								<useDefaultDelimiters>false</useDefaultDelimiters>
							</configuration>
						</plugin>
						<plugin>
							<groupId>pl.project13.maven</groupId>
							<artifactId>git-commit-id-plugin</artifactId>
							<executions>
								<execution>
									<goals>
										<goal>revision</goal>
									</goals>
									<configuration>
										<verbose>true</verbose>
										<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
										<generateGitPropertiesFile>true</generateGitPropertiesFile>
										<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
										<failOnNoGitDirectory>false</failOnNoGitDirectory>
										<failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<!-- Support our own plugin -->
						<plugin>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-maven-plugin</artifactId>
							<executions>
								<execution>
									<goals>
										<goal>repackage</goal>
									</goals>
								</execution>
							</executions>
							<configuration>
								<mainClass>${start-class}</mainClass>
							</configuration>
						</plugin>
						<!-- Support shade packaging (if the user does not want to use our plugin) -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-shade-plugin</artifactId>
							<dependencies>
								<dependency>
									<groupId>org.springframework.boot</groupId>
									<artifactId>spring-boot-maven-plugin</artifactId>
									<version>${artifact.spring-boot.version}</version>
								</dependency>
							</dependencies>
							<configuration>
								<keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
								<createDependencyReducedPom>true</createDependencyReducedPom>
								<filters>
									<filter>
										<artifact>*:*</artifact>
										<excludes>
											<exclude>META-INF/*.SF</exclude>
											<exclude>META-INF/*.DSA</exclude>
											<exclude>META-INF/*.RSA</exclude>
										</excludes>
									</filter>
								</filters>
							</configuration>
							<executions>
								<execution>
									<phase>package</phase>
									<goals>
										<goal>shade</goal>
									</goals>
									<configuration>
										<transformers>
											<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
												<resource>META-INF/spring.handlers</resource>
											</transformer>
											<transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
												<resource>META-INF/spring.factories</resource>
											</transformer>
											<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
												<resource>META-INF/spring.schemas</resource>
											</transformer>
											<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
											<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
												<mainClass>${start-class}</mainClass>
											</transformer>
										</transformers>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>assembly-package</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- you can't use property in child to enable profile from parent -->
				<file>
					<exists>${basedir}/src/assembly/assembly-package.xml</exists>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.afc</groupId>
					<artifactId>afc-scripts</artifactId>
					<classifier>pack</classifier>
					<type>tar.gz</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-scripts</id>
								<phase>generate-resources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-scripts</id>
								<phase>generate-resources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>assembly-package</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<filters>
										<filter>src/main/filters/filter.properties</filter>
									</filters>
									<appendAssemblyId>true</appendAssemblyId>
									<descriptors>
										<descriptor>src/assembly/assembly-package.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>assembly-provision</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- you can't use property in child to enable profile from parent -->
				<file>
					<exists>${basedir}/src/assembly/assembly-provision.xml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>assembly-provision</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<filters>
										<filter>src/main/filters/filter.properties</filter>
									</filters>
									<appendAssemblyId>true</appendAssemblyId>
									<descriptors>
										<descriptor>src/assembly/assembly-provision.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>assembly</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- you can't use property in child to enable profile from parent -->
				<file>
					<exists>${basedir}/src/assembly/assembly.xml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<filters>
										<filter>src/main/filters/filter.properties</filter>
									</filters>
									<appendAssemblyId>true</appendAssemblyId>
									<descriptors>
										<descriptor>src/assembly/assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dockerize</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- you can't use property in child to enable profile from parent -->
				<file>
					<exists>${basedir}/src/main/resources-excluded/docker/build.dockerfile</exists>
				</file>
				<!-- and match os -->
				<os>
					<family>linux</family>
				</os>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.afc</groupId>
					<artifactId>afc-scripts</artifactId>
					<classifier>pack</classifier>
					<type>tar.gz</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-scripts</id>
								<phase>generate-resources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-scripts</id>
								<phase>generate-resources</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>docker-build</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>target</workingDirectory>
									<executable>/bin/sh</executable>
									<arguments>
										<argument>scripts/build/docker-build.sh</argument>
										<argument>${docker.registry}</argument>
										<argument>${project.groupId}</argument>
										<argument>${project.artifactId}</argument>
										<argument>${project.version}</argument>
										<argument>resources-excluded/docker/build.dockerfile</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>docker-clean</id>
								<!-- <phase>package</phase> -->
								<phase>none</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>target</workingDirectory>
									<executable>/bin/sh</executable>
									<arguments>
										<argument>scripts/build/docker-rmi.sh</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>docker-push</id>
								<phase>deploy</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<workingDirectory>target</workingDirectory>
									<executable>/bin/sh</executable>
									<arguments>
										<argument>scripts/build/docker-push.sh</argument>
										<argument>${docker.registry}</argument>
										<argument>${project.groupId}</argument>
										<argument>${project.artifactId}</argument>
										<argument>${project.version}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>nodejs</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- you can't use property in child to enable profile from parent -->
				<file>
					<exists>${basedir}/package.json</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>install-node</id>
								<goals>
									<goal>install-node-and-npm</goal>
									<goal>install-node-and-yarn</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<installDirectory>.</installDirectory>
									<nodeVersion>v8.11.1</nodeVersion>
									<npmVersion>6.3.0</npmVersion>
									<yarnVersion>v1.9.4</yarnVersion>
								</configuration>
							</execution>
							<execution>
								<id>yarn-install</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<installDirectory>.</installDirectory>
									<arguments>install --force</arguments>
								</configuration>
							</execution>
							<execution>
								<id>yarn-dist</id>
								<goals>
									<goal>yarn</goal>
								</goals>
								<phase>compile</phase>
								<configuration>
									<installDirectory>.</installDirectory>
									<arguments>dist</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>clover</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- profile will be activated when "-Pclover" is defined -->
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.openclover</groupId>
						<artifactId>clover-maven-plugin</artifactId>
						<version>${artifact.clover.version}</version>
						<executions>
							<execution>
								<id>clover-setup</id>
								<phase>initialize</phase>
								<goals>
									<goal>setup</goal>
								</goals>
							</execution>
							<execution>
								<id>clover-report</id>
								<phase>install</phase>
								<goals>
									<goal>clover</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<generateHtml>true</generateHtml>
							<generateXml>true</generateXml>
							<includesTestSourceRoots>false</includesTestSourceRoots>
							<snapshot>${user.home}/.clover/atlassian-plugins-clover.snapshot</snapshot>
							<singleCloverDatabase>true</singleCloverDatabase>
							<excludes>
								<exclude>**/config/**</exclude>
								<exclude>**/context/**</exclude>
								<exclude>**/model/**</exclude>
								<exclude>${clover.exclude.1}</exclude>
								<exclude>${clover.exclude.2}</exclude>
								<exclude>${clover.exclude.3}</exclude>
								<exclude>${clover.exclude.4}</exclude>
								<exclude>${clover.exclude.5}</exclude>
								<exclude>${clover.exclude.6}</exclude>
								<exclude>${clover.exclude.7}</exclude>
								<exclude>${clover.exclude.8}</exclude>
								<exclude>${clover.exclude.9}</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>auto-version</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- profile will be activated when "-Pauto-version" is defined -->
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>latest-release</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>latest-version</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<!-- profile will be activated when "-Pauto-version" is defined -->
			</activation>
			<properties>
				<artifact>default</artifact>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>latest-snapshot</id>
								<phase>validate</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
